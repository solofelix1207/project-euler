#Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
#By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.

def Fibonacci(numb):
    x = [1,2]      #Starting with 1,2
    y = 0            #initializing y at 0
    for i in x:      #Loop through the digits in x
        y = x[-2] + x[-1]   #at each point pick de last two elements of de list x and add them
        if y>numb:          #if the total is greater than the limit provided in the function argument, break out of de loop
            break
        x.append(y)         #If not for all those less than that, append to the list x

    z = sum([i for i in x if i%2==0])    #now we have the full fibonacci list for the given limit. We select only the even numbers and sum them

    return(z)    #return the sum


print(Fibonacci(4000000))